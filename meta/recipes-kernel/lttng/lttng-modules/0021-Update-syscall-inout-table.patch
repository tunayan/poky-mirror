From db8c252b6f4e8823b603ffaab62d51503a3744aa Mon Sep 17 00:00:00 2001
From: Michael Jeanson <mjeanson@efficios.com>
Date: Tue, 6 Dec 2022 11:33:11 -0500
Subject: [PATCH 21/23] Update syscall inout table

Upstream-Status: Backport

Change-Id: I515c8f68aa5c2dce1e7433746ccbf64e0ce376d1
Signed-off-by: Michael Jeanson <mjeanson@efficios.com>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 .../table-syscall-inout-arm-32-override.txt   |   4 +
 .../table-syscall-inout-arm-64-override.txt   |   2 +
 .../table-syscall-inout-mips-32-override.txt  |   4 +
 .../table-syscall-inout-mips-64-override.txt  |   2 +
 ...able-syscall-inout-powerpc-32-override.txt |   4 +
 ...able-syscall-inout-powerpc-64-override.txt |   2 +
 .../table-syscall-inout-riscv-32-override.txt |   2 +
 .../table-syscall-inout-riscv-64-override.txt |   2 +
 .../table-syscall-inout-x86-32-override.txt   |   5 +
 .../table-syscall-inout-x86-64-override.txt   |   2 +
 tools/syscalls/table-syscall-inout.txt        | 136 ++++++++++++++++++
 11 files changed, 165 insertions(+)
 create mode 100644 tools/syscalls/table-syscall-inout-arm-32-override.txt
 create mode 100644 tools/syscalls/table-syscall-inout-arm-64-override.txt
 create mode 100644 tools/syscalls/table-syscall-inout-mips-32-override.txt
 create mode 100644 tools/syscalls/table-syscall-inout-mips-64-override.txt
 create mode 100644 tools/syscalls/table-syscall-inout-powerpc-32-override.txt
 create mode 100644 tools/syscalls/table-syscall-inout-powerpc-64-override.txt
 create mode 100644 tools/syscalls/table-syscall-inout-riscv-32-override.txt
 create mode 100644 tools/syscalls/table-syscall-inout-riscv-64-override.txt
 create mode 100644 tools/syscalls/table-syscall-inout-x86-64-override.txt

diff --git a/tools/syscalls/table-syscall-inout-arm-32-override.txt b/tools/syscalls/table-syscall-inout-arm-32-override.txt
new file mode 100644
index 00000000..415bba99
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-arm-32-override.txt
@@ -0,0 +1,4 @@
+# OLD_SIGSUSPEND3: 3 args variant
+syscall sigsuspend nbargs 3 rw: (r, r, r)
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-arm-64-override.txt b/tools/syscalls/table-syscall-inout-arm-64-override.txt
new file mode 100644
index 00000000..6ccfa9d4
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-arm-64-override.txt
@@ -0,0 +1,2 @@
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-mips-32-override.txt b/tools/syscalls/table-syscall-inout-mips-32-override.txt
new file mode 100644
index 00000000..b3227800
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-mips-32-override.txt
@@ -0,0 +1,4 @@
+# OLD_SIGSUSPEND: 1 arg variant
+syscall sigsuspend nbargs 1 rw: (r)
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-mips-64-override.txt b/tools/syscalls/table-syscall-inout-mips-64-override.txt
new file mode 100644
index 00000000..6ccfa9d4
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-mips-64-override.txt
@@ -0,0 +1,2 @@
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-powerpc-32-override.txt b/tools/syscalls/table-syscall-inout-powerpc-32-override.txt
new file mode 100644
index 00000000..b3227800
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-powerpc-32-override.txt
@@ -0,0 +1,4 @@
+# OLD_SIGSUSPEND: 1 arg variant
+syscall sigsuspend nbargs 1 rw: (r)
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-powerpc-64-override.txt b/tools/syscalls/table-syscall-inout-powerpc-64-override.txt
new file mode 100644
index 00000000..6ccfa9d4
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-powerpc-64-override.txt
@@ -0,0 +1,2 @@
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-riscv-32-override.txt b/tools/syscalls/table-syscall-inout-riscv-32-override.txt
new file mode 100644
index 00000000..6ccfa9d4
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-riscv-32-override.txt
@@ -0,0 +1,2 @@
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-riscv-64-override.txt b/tools/syscalls/table-syscall-inout-riscv-64-override.txt
new file mode 100644
index 00000000..6ccfa9d4
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-riscv-64-override.txt
@@ -0,0 +1,2 @@
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-x86-32-override.txt b/tools/syscalls/table-syscall-inout-x86-32-override.txt
index 4ddb5974..33a6ed5a 100644
--- a/tools/syscalls/table-syscall-inout-x86-32-override.txt
+++ b/tools/syscalls/table-syscall-inout-x86-32-override.txt
@@ -1 +1,6 @@
+# On x86-32, the 64-bit mask parameter is split into two 32-bit parts
 syscall fanotify_mark nbargs 6 rw: (r, r, r, r, r, r)
+# OLD_SIGSUSPEND3: 3 args variant
+syscall sigsuspend nbargs 3 rw: (r, r, r)
+# CLONE_BACKWARDS: tls passed as the 4th argument of clone(2), not the 5th one.
+syscall clone nbargs 5 rw: (r, r, w, r, w)
diff --git a/tools/syscalls/table-syscall-inout-x86-64-override.txt b/tools/syscalls/table-syscall-inout-x86-64-override.txt
new file mode 100644
index 00000000..8f7c5806
--- /dev/null
+++ b/tools/syscalls/table-syscall-inout-x86-64-override.txt
@@ -0,0 +1,2 @@
+# "Regular" clone
+syscall clone nbargs 5 rw: (r, r, w, w, r)
diff --git a/tools/syscalls/table-syscall-inout.txt b/tools/syscalls/table-syscall-inout.txt
index 89759a3c..928a4ed4 100644
--- a/tools/syscalls/table-syscall-inout.txt
+++ b/tools/syscalls/table-syscall-inout.txt
@@ -2,25 +2,44 @@ syscall read nbargs 3 rw: (r, w, r)
 syscall write nbargs 3 rw: (r, r, r)
 syscall open nbargs 3 rw: (r, r, r)
 syscall close nbargs 1 rw: (r)
+syscall stat nbargs 2 rw: (r, w)
+syscall stat64 nbargs 2 rw: (r, w)
 syscall newstat nbargs 2 rw: (r, w)
+syscall fstat nbargs 2 rw: (r, w)
+syscall fstat64 nbargs 2 rw: (r, w)
 syscall newfstat nbargs 2 rw: (r, w)
+syscall lstat nbargs 2 rw: (r, w)
+syscall lstat64 nbargs 2 rw: (r, w)
 syscall newlstat nbargs 2 rw: (r, w)
 syscall poll nbargs 3 rw: (rw, r, r)
 syscall lseek nbargs 3 rw: (r, r, r)
 syscall mmap nbargs 6 rw: (r, r, r, r, r, r)
+syscall old_mmap nbargs 6 rw: (r, r, r, r, r, r)
+syscall mips_mmap nbargs 6 rw: (r, r, r, r, r, r)
+syscall mmap2 nbargs 6 rw: (r, r, r, r, r, r)
+syscall mips_mmap2 nbargs 6 rw: (r, r, r, r, r, r)
+syscall mmap_pgoff nbargs 6 rw: (r, r, r, r, r, r)
 syscall mprotect nbargs 3 rw: (r, r, r)
 syscall munmap nbargs 2 rw: (r, r)
 syscall brk nbargs 1 rw: (r)
+syscall sigaction nbargs 3 rw: (r, r, w)
+syscall 32_sigaction nbargs 3 rw: (r, r, w)
 syscall rt_sigaction nbargs 4 rw: (r, r, w, r)
+syscall sigprocmask nbargs 3 rw: (r, r, w)
 syscall rt_sigprocmask nbargs 4 rw: (r, r, w, r)
 syscall ioctl nbargs 3 rw: (r, r, rw)
+syscall 32_pread nbargs 6 rw: (r, w, r, r, r, r)
 syscall pread64 nbargs 4 rw: (r, w, r, r)
+syscall ia32_pread64 nbargs 5 rw: (r, w, r, r, r)
+syscall 32_pwrite nbargs 6 rw: (r, r, r, r, r, r)
 syscall pwrite64 nbargs 4 rw: (r, r, r, r)
+syscall ia32_pwrite64 nbargs 5 rw: (r, r, r, r, r)
 syscall readv nbargs 3 rw: (r, rw, r)
 syscall writev nbargs 3 rw: (r, rw, r)
 syscall access nbargs 2 rw: (r, r)
 syscall pipe nbargs 1 rw: (w)
 syscall select nbargs 5 rw: (r, rw, rw, rw, rw)
+syscall old_select nbargs 5 rw: (r, rw, rw, rw, rw)
 syscall sched_yield nbargs 0
 syscall mremap nbargs 5 rw: (r, r, r, r, r)
 syscall msync nbargs 3 rw: (r, r, r)
@@ -29,6 +48,7 @@ syscall madvise nbargs 3 rw: (r, r, r)
 syscall shmget nbargs 3 rw: (r, r, r)
 syscall shmat nbargs 3 rw: (r, r, r)
 syscall shmctl nbargs 3 rw: (r, r, rw)
+syscall old_shmctl nbargs 3 rw: (r, r, rw)
 syscall dup nbargs 1 rw: (r)
 syscall dup2 nbargs 2 rw: (r, r)
 syscall pause nbargs 0
@@ -42,6 +62,8 @@ syscall sendfile64 nbargs 4 rw: (r, r, rw, r)
 syscall socket nbargs 3 rw: (r, r, r)
 syscall connect nbargs 3 rw: (r, r, r)
 syscall accept nbargs 3 rw: (r, w, rw)
+syscall send nbargs 4 rw: (r, r, r, r,)
+syscall recv nbargs 4 rw: (r, w, r, r)
 syscall sendto nbargs 6 rw: (r, r, r, r, r, r)
 syscall recvfrom nbargs 6 rw: (r, w, r, r, w, rw)
 syscall sendmsg nbargs 3 rw: (r, r, r)
@@ -58,22 +80,31 @@ syscall exit nbargs 1 rw: (r)
 syscall wait4 nbargs 4 rw: (r, w, r, w)
 syscall kill nbargs 2 rw: (r, r)
 syscall newuname nbargs 1 rw: (w)
+syscall olduname nbargs 1 rw: (w)
+syscall uname nbargs 1 rw: (w)
 syscall semget nbargs 3 rw: (r, r, r)
 syscall semop nbargs 3 rw: (r, r, r)
 syscall semctl nbargs 4 rw: (r, r, r, rw)
+syscall old_semctl nbargs 4 rw: (r, r, r, rw)
 syscall shmdt nbargs 1 rw: (r)
 syscall msgget nbargs 2 rw: (r, r)
 syscall msgsnd nbargs 4 rw: (r, r, r, r)
 syscall msgrcv nbargs 5 rw: (r, w, r, r, r)
 syscall msgctl nbargs 3 rw: (r, r, rw)
+syscall old_msgctl nbargs 3 rw: (r, r, rw)
 syscall fcntl nbargs 3 rw: (r, r, rw)
+syscall fcntl64 nbargs 3 rw: (r, r, rw)
 syscall flock nbargs 2 rw: (r, r)
 syscall fsync nbargs 1 rw: (r)
 syscall fdatasync nbargs 1 rw: (r)
 syscall truncate nbargs 2 rw: (r, r)
 syscall truncate64 nbargs 2 rw: (r, r)
+syscall 32_truncate64 nbargs 4 rw: (r, r, r, r)
+syscall ia32_truncate64 nbargs 3 rw: (r, r, r)
 syscall ftruncate nbargs 2 rw: (r, r)
 syscall ftruncate64 nbargs 2 rw: (r, r)
+syscall 32_ftruncate64 nbargs 4 rw: (r, r, r, r)
+syscall ia32_ftruncate64 nbargs 3 rw: (r, r, r)
 syscall getdents nbargs 3 rw: (r, w, r)
 syscall getcwd nbargs 2 rw: (w, r)
 syscall chdir nbargs 1 rw: (r)
@@ -89,11 +120,15 @@ syscall readlink nbargs 3 rw: (r, w, r)
 syscall chmod nbargs 2 rw: (r, r)
 syscall fchmod nbargs 2 rw: (r, r)
 syscall chown nbargs 3 rw: (r, r, r)
+syscall chown16 nbargs 3 rw: (r, r, r)
 syscall fchown nbargs 3 rw: (r, r, r)
+syscall fchown16 nbargs 3 rw: (r, r, r)
 syscall lchown nbargs 3 rw: (r, r, r)
+syscall lchown16 nbargs 3 rw: (r, r, r)
 syscall umask nbargs 1 rw: (r)
 syscall gettimeofday nbargs 2 rw: (w, w)
 syscall getrlimit nbargs 2 rw: (r, w)
+syscall old_getrlimit nbargs 2 rw: (r, w)
 syscall getrusage nbargs 2 rw: (r, w)
 syscall sysinfo nbargs 1 rw: (w)
 syscall times nbargs 1 rw: (w)
@@ -102,7 +137,9 @@ syscall getuid nbargs 0
 syscall syslog nbargs 3 rw: (r, w, r)
 syscall getgid nbargs 0
 syscall setuid nbargs 1 rw: (r)
+syscall setuid16 nbargs 1 rw: (r)
 syscall setgid nbargs 1 rw: (r)
+syscall setgid16 nbargs 1 rw: (r)
 syscall geteuid nbargs 0
 syscall getegid nbargs 0
 syscall setpgid nbargs 2 rw: (r, r)
@@ -110,16 +147,26 @@ syscall getppid nbargs 0
 syscall getpgrp nbargs 0
 syscall setsid nbargs 0
 syscall setreuid nbargs 2 rw: (r, r)
+syscall setreuid16 nbargs 2 rw: (r, r)
 syscall setregid nbargs 2 rw: (r, r)
+syscall setregid16 nbargs 2 rw: (r, r)
 syscall getgroups nbargs 2 rw: (r, w)
+syscall getgroups16 nbargs 2 rw: (r, w)
 syscall setgroups nbargs 2 rw: (r, r)
+syscall setgroups16 nbargs 2 rw: (r, r)
 syscall setresuid nbargs 3 rw: (r, r, r)
+syscall setresuid16 nbargs 3 rw: (r, r, r)
 syscall getresuid nbargs 3 rw: (w, w, w)
+syscall getresuid16 nbargs 3 rw: (w, w, w)
 syscall setresgid nbargs 3 rw: (r, r, r)
+syscall setresgid16 nbargs 3 rw: (r, r, r)
 syscall getresgid nbargs 3 rw: (w, w, w)
+syscall getresgid16 nbargs 3 rw: (w, w, w)
 syscall getpgid nbargs 1 rw: (r)
 syscall setfsuid nbargs 1 rw: (r)
+syscall setfsuid16 nbargs 1 rw: (r)
 syscall setfsgid nbargs 1 rw: (r)
+syscall setfsgid16 nbargs 1 rw: (r)
 syscall getsid nbargs 1 rw: (r)
 syscall capget nbargs 2 rw: (r, w)
 syscall capset nbargs 2 rw: (r, r)
@@ -135,7 +182,9 @@ syscall mknod nbargs 3 rw: (r, r, r)
 syscall personality nbargs 1 rw: (r)
 syscall ustat nbargs 2 rw: (r, w)
 syscall statfs nbargs 2 rw: (r, w)
+syscall statfs64 nbargs 3 rw: (r, r, w)
 syscall fstatfs nbargs 2 rw: (r, w)
+syscall fstatfs64 nbargs 3 rw: (r, r, w)
 syscall sysfs nbargs 3 rw: (r, r, r)
 syscall getpriority nbargs 2 rw: (r, r)
 syscall setpriority nbargs 3 rw: (r, r, r)
@@ -148,6 +197,7 @@ syscall sched_get_priority_min nbargs 1 rw: (r)
 syscall sched_rr_get_interval nbargs 2 rw: (r, w)
 syscall sched_rr_get_interval_time32 nbargs 2 rw: (r, w)
 syscall mlock nbargs 2 rw: (r, r)
+syscall mlock2 nbargs 3 rw: (r, r, r)
 syscall munlock nbargs 2 rw: (r, r)
 syscall mlockall nbargs 1 rw: (r)
 syscall munlockall nbargs 0
@@ -164,6 +214,7 @@ syscall acct nbargs 1 rw: (r)
 syscall settimeofday nbargs 2 rw: (r, r)
 syscall mount nbargs 5 rw: (r, r, r, r, r)
 syscall umount nbargs 2 rw: (r, r)
+syscall oldumount nbargs 1 rw: (r)
 syscall swapon nbargs 2 rw: (r, r)
 syscall swapoff nbargs 1 rw: (r)
 syscall reboot nbargs 4 rw: (r, r, r, r)
@@ -174,6 +225,7 @@ syscall delete_module nbargs 2 rw: (r, r)
 syscall quotactl nbargs 4 rw: (r, r, r, rw)
 syscall gettid nbargs 0
 syscall readahead nbargs 3 rw: (r, r, r)
+syscall ia32_readahead nbargs 4 rw: (r, r, r, r)
 syscall setxattr nbargs 5 rw: (r, r, r, r, r)
 syscall lsetxattr nbargs 5 rw: (r, r, r, r, r)
 syscall fsetxattr nbargs 5 rw: (r, r, r, r, r)
@@ -189,6 +241,8 @@ syscall fremovexattr nbargs 2 rw: (r, r)
 syscall tkill nbargs 2 rw: (r, r)
 syscall time nbargs 1 rw: (w)
 syscall time32 nbargs 1 rw: (w)
+syscall stime nbargs 1 rw: (r)
+syscall stime32 nbargs 1 rw: (r)
 syscall futex nbargs 6 rw: (rw, r, r, r, rw, r)
 syscall futex_time32 nbargs 6 rw: (rw, r, r, r, rw, r)
 syscall sched_setaffinity nbargs 3 rw: (r, r, r)
@@ -206,8 +260,11 @@ syscall getdents64 nbargs 3 rw: (r, w, r)
 syscall set_tid_address nbargs 1 rw: (r)
 syscall restart_syscall nbargs 0
 syscall semtimedop nbargs 4 rw: (r, r, r, rw)
+syscall semtimedop_time32 nbargs 4 rw: (r, r, r, rw)
 syscall fadvise64 nbargs 4 rw: (r, r, r, r)
+syscall ia32_fadvise64 nbargs 5 rw: (r, r, r, r, r)
 syscall fadvise64_64 nbargs 4 rw: (r, r, r, r)
+syscall ia32_fadvise64_64 nbargs 6 rw: (r, r, r, r, r, r)
 syscall timer_create nbargs 3 rw: (r, r, w)
 syscall timer_settime nbargs 4 rw: (r, r, r, w)
 syscall timer_settime32 nbargs 4 rw: (r, r, r, w)
@@ -241,6 +298,7 @@ syscall mq_timedreceive_time32 nbargs 5 rw: (r, w, r, w, r)
 syscall mq_notify nbargs 2 rw: (r, r)
 syscall mq_getsetattr nbargs 3 rw: (r, r, w)
 syscall kexec_load nbargs 4 rw: (r, r, r, r)
+syscall kexec_file_load nbargs 5 rw: (r, r, r, r, r)
 syscall waitid nbargs 5 rw: (r, r, w, r, w)
 syscall add_key nbargs 5 rw: (r, r, r, r, r)
 syscall request_key nbargs 4 rw: (r, r, r, r)
@@ -252,19 +310,23 @@ syscall inotify_add_watch nbargs 3 rw: (r, r, r)
 syscall inotify_rm_watch nbargs 2 rw: (r, r)
 syscall migrate_pages nbargs 4 rw: (r, r, r, r)
 syscall openat nbargs 4 rw: (r, r, r, r)
+syscall openat2 nbargs 4 rw: (r, r, r, r)
 syscall mkdirat nbargs 3 rw: (r, r, r)
 syscall mknodat nbargs 4 rw: (r, r, r, r)
 syscall fchownat nbargs 5 rw: (r, r, r, r, r)
 syscall futimesat nbargs 3 rw: (r, r, r)
 syscall futimesat_time32 nbargs 3 rw: (r, r, r)
+syscall fstatat64 nbargs 4 rw: (r, r, w, r)
 syscall newfstatat nbargs 4 rw: (r, r, w, r)
 syscall unlinkat nbargs 3 rw: (r, r, r)
 syscall renameat nbargs 4 rw: (r, r, r, r)
+syscall renameat2 nbargs 5 rw: (r, r, r, r, r)
 syscall linkat nbargs 5 rw: (r, r, r, r, r)
 syscall symlinkat nbargs 3 rw: (r, r, r)
 syscall readlinkat nbargs 4 rw: (r, r, w, r)
 syscall fchmodat nbargs 3 rw: (r, r, r)
 syscall faccessat nbargs 3 rw: (r, r, r)
+syscall faccessat2 nbargs 4 rw: (r, r, r, r)
 syscall pselect6 nbargs 6 rw: (r, rw, rw, rw, rw, r)
 syscall pselect6_time32 nbargs 6 rw: (r, rw, rw, rw, rw, r)
 syscall ppoll nbargs 5 rw: (rw, r, r, r, r)
@@ -275,15 +337,19 @@ syscall get_robust_list nbargs 3 rw: (r, w, w)
 syscall splice nbargs 6 rw: (r, r, r, r, r, r)
 syscall tee nbargs 4 rw: (r, r, r, r)
 syscall sync_file_range nbargs 4 rw: (r, r, r, r)
+syscall sync_file_range2 nbargs 4 rw: (r, r, r, r)
+syscall ia32_sync_file_range nbargs 6 rw: (r, r, r, r, r, r)
 syscall vmsplice nbargs 4 rw: (r, r, r, r)
 syscall move_pages nbargs 6 rw: (r, r, r, r, w, r)
 syscall utimensat nbargs 4 rw: (r, r, r, r)
 syscall utimensat_time32 nbargs 4 rw: (r, r, r, r)
 syscall epoll_pwait nbargs 6 rw: (r, w, r, r, r, r)
+syscall epoll_pwait2 nbargs 6 rw: (r, w, r, r, r, r)
 syscall signalfd nbargs 3 rw: (r, r, r)
 syscall timerfd_create nbargs 2 rw: (r, r)
 syscall eventfd nbargs 1 rw: (r)
 syscall fallocate nbargs 4 rw: (r, r, r, r)
+syscall ia32_fallocate nbargs 6 rw: (r, r, r, r, r, r)
 syscall timerfd_settime nbargs 4 rw: (r, r, r, w)
 syscall timerfd_settime32 nbargs 4 rw: (r, r, r, w)
 syscall timerfd_gettime nbargs 2 rw: (r, w)
@@ -296,7 +362,9 @@ syscall dup3 nbargs 3 rw: (r, r, r)
 syscall pipe2 nbargs 2 rw: (w, r)
 syscall inotify_init1 nbargs 1 rw: (r)
 syscall preadv nbargs 5 rw: (r, w, r, r, r)
+syscall preadv2 nbargs 6 rw: (r, w, r, r, r, r)
 syscall pwritev nbargs 5 rw: (r, r, r, r, r)
+syscall pwritev2 nbargs 6 rw: (r, r, r, r, r, r)
 syscall rt_tgsigqueueinfo nbargs 4 rw: (r, r, r, r)
 syscall perf_event_open nbargs 5 rw: (r, r, r, r, r)
 syscall recvmmsg nbargs 5 rw: (r, w, r, r, rw)
@@ -315,3 +383,71 @@ syscall getcpu nbargs 3 rw: (w, w, rw)
 syscall process_vm_readv nbargs 6 rw: (r, w, r, r, r, r)
 syscall process_vm_writev nbargs 6 rw: (r, r, r, r, r, r)
 syscall finit_module nbargs 3 rw: (r, r, r)
+syscall memfd_create nbargs 2 rw: (r, r)
+syscall bpf nbargs 3 rw: (r, r, r)
+syscall clone3 nbargs 2 rw: (r, r)
+syscall copy_file_range nbargs 6 rw: (r, rw, r, rw, r, r)
+syscall execve nbargs 3 rw: (r, r, r)
+syscall execveat nbargs 5 rw: (r, r, r, r, r)
+syscall fsconfig nbargs 5 rw: (r, r, r, r, r)
+syscall fsopen nbargs 2 rw: (r, r)
+syscall fspick nbargs 3 rw: (r, r, r)
+syscall fsmount nbargs 3 rw: (r, r, r)
+syscall futex_waitv nbargs 5 rw: (r, r, r, r, r)
+syscall getrandom nbargs 3 rw: (w, r, r)
+syscall io_pgetevents nbargs 6 rw: (r, r, r, w, r, r)
+syscall io_pgetevents_time32 nbargs 6 rw: (r, r, r, w, r, r)
+syscall io_uring_enter nbargs 6 rw: (r, r, r, r, r, r)
+syscall io_uring_register nbargs 4 rw: (r, r, r, r)
+syscall io_uring_setup nbargs 2 rw: (r, rw)
+syscall modify_ldt nbargs 3 rw: (rw, w, r)
+syscall mount_setattr nbargs 5 rw: (r, r, r, r, r)
+syscall move_mount nbargs 5 rw: (r, r, r, r, r)
+syscall open_tree nbargs 3 rw: (r, r, r)
+syscall pidfd_send_signal nbargs 4 rw: (r, r, r, r)
+syscall pidfd_open nbargs 2 rw: (r, r)
+syscall pidfd_getfd nbargs 3 rw: (r, r, r)
+syscall process_madvise nbargs 5 rw: (r, r, r, r, r)
+syscall quotactl_fd nbargs 4 rw: (r, r, r, rw)
+syscall rseq nbargs 4 rw: (r, r, r, r)
+syscall sched_getattr nbargs 4 rw: (r, w, r, r)
+syscall sched_setattr nbargs 3 rw: (r, r, r)
+syscall seccomp nbargs 3 rw: (r, r, rw)
+syscall statx nbargs 5 rw: (r, r, r, r, w)
+syscall sigpending nbargs 1 rw: (w)
+syscall uselib nbargs 1 rw: (r)
+syscall set_thread_area nbargs 1 rw: (r)
+syscall get_thread_area nbargs 1 rw: (rw)
+syscall socketcall nbargs 2 rw: (r, rw)
+syscall waitpid nbargs 3 rw: (r, w, r)
+syscall old_readdir nbargs 3 rw: (r, w, r)
+syscall sendfile nbargs 4 rw: (r, r, rw, r)
+syscall llseek nbargs 5 rw: (r, r, r, w, r)
+syscall 32_llseek nbargs 5 rw: (r, r, r, w, r)
+syscall landlock_add_rule nbargs 4 rw: (r, r, r, r)
+syscall landlock_create_ruleset nbargs 3 rw: (r, r, r)
+syscall landlock_restrict_self nbargs 2 rw: (r, r)
+syscall pciconfig_read nbargs 5 rw: (r, r, r, r, w)
+syscall pciconfig_write nbargs 5 rw: (r, r, r, r, r)
+syscall pciconfig_iobase nbargs 3 rw: (r, r, r)
+syscall swapcontext nbargs 3 rw: (w, r, r)
+syscall iopl nbargs 1 rw: (r)
+syscall userfaultfd nbargs 1 rw: (r)
+syscall pkey_alloc nbargs 2 rw: (r, r)
+syscall pkey_free nbargs 1 rw: (r)
+syscall pkey_mprotect nbargs 4 rw: (r, r, r, r)
+syscall memfd_secret nbargs 1 rw: (r)
+syscall arch_prctl nbargs 2 rw: (r, rw)
+syscall process_mrelease nbargs 2 rw: (r, r)
+syscall ioperm nbargs 3 rw: (r, r, r)
+syscall membarrier nbargs 3 rw: (r, r, r)
+syscall close_range nbargs 3 rw: (r, r, r)
+syscall set_mempolicy_home_node nbargs 4 rw: (r, r, r, r)
+syscall kcmp nbargs 5 rw: (r, r, r, r, r)
+syscall nice nbargs 1 rw: (r)
+syscall ssetmask nbargs 1 rw: (r)
+syscall signal nbargs 2 rw: (r, r)
+syscall cacheflush nbargs 3 rw: (r, r, r)
+syscall cachectl nbargs 3 rw: (r, r, r)
+syscall 32_personality nbargs 1 rw: (r)
+syscall riscv_flush_icache nbargs 3 rw: (r, r, r)
-- 
2.34.1

