From 027ac2ad0695bb506460f9dd7e57149b71055887 Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Tue, 8 Jun 2021 23:21:01 -0700
Subject: [PATCH] test-seccomp: Check for __NR_ppoll before use

some newer architectures like riscv32 do not have __NR_ppoll from get go

Upstream-Status: Submitted [https://github.com/systemd/systemd/pull/19858]
Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 src/test/test-seccomp.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/test/test-seccomp.c b/src/test/test-seccomp.c
index b1f917eb54..daac0fcea8 100644
--- a/src/test/test-seccomp.c
+++ b/src/test/test-seccomp.c
@@ -832,7 +832,7 @@ static void test_load_syscall_filter_set_raw(void) {
                 assert_se(s = hashmap_new(NULL));
 #if defined __NR_poll && __NR_poll >= 0
                 assert_se(hashmap_put(s, UINT32_TO_PTR(__NR_poll + 1), INT_TO_PTR(-1)) >= 0);
-#else
+#elif defined __NR_ppoll
                 assert_se(hashmap_put(s, UINT32_TO_PTR(__NR_ppoll + 1), INT_TO_PTR(-1)) >= 0);
 #endif
 
@@ -849,7 +849,8 @@ static void test_load_syscall_filter_set_raw(void) {
                 assert_se(s = hashmap_new(NULL));
 #if defined __NR_poll && __NR_poll >= 0
                 assert_se(hashmap_put(s, UINT32_TO_PTR(__NR_poll + 1), INT_TO_PTR(EILSEQ)) >= 0);
-#else
+#elif defined __NR_ppoll
+                assert_se(hashmap_put(s, UINT32_TO_PTR(__NR_ppoll + 1), INT_TO_PTR(-1)) >= 0);
                 assert_se(hashmap_put(s, UINT32_TO_PTR(__NR_ppoll + 1), INT_TO_PTR(EILSEQ)) >= 0);
 #endif
 
-- 
2.32.0

